# Sistema de Timeout Inteligente - Pipeline v5.0.0
# =================================================

timeout_management:
  enabled: true
  strategy: "adaptive"  # "fixed", "adaptive", "progressive"
  
  # Timeouts por estágio (em segundos)
  stage_timeouts:
    "01_chunk_processing": 180        # 3 min
    "02_encoding_validation": 300     # 5 min
    "03_deduplication": 240          # 4 min
    "04_feature_validation": 180     # 3 min
    "04b_statistical_analysis_pre": 240  # 4 min
    "05_political_analysis": 900     # 15 min - API intensivo
    "06_text_cleaning": 300          # 5 min
    "06b_statistical_analysis_post": 300  # 5 min
    "07_linguistic_processing": 600  # 10 min - spaCy intensivo
    "08_sentiment_analysis": 1200    # 20 min - GARGALO PRINCIPAL ⚡
    "09_topic_modeling": 800         # 13 min - Voyage.ai
    "10_tfidf_extraction": 400       # 7 min
    "11_clustering": 600             # 10 min
    "12_hashtag_normalization": 300  # 5 min
    "13_domain_analysis": 360        # 6 min
    "14_temporal_analysis": 420      # 7 min
    "15_network_analysis": 480       # 8 min
    "16_qualitative_analysis": 540   # 9 min
    "17_smart_pipeline_review": 300  # 5 min
    "18_topic_interpretation": 360   # 6 min
    "19_semantic_search": 480        # 8 min
    "20_pipeline_validation": 240    # 4 min
    
  # Configuração adaptativa
  adaptive_config:
    base_timeout_per_record: 2.5     # segundos por registro
    max_timeout_per_stage: 1800      # 30 min máximo
    min_timeout_per_stage: 120       # 2 min mínimo
    timeout_buffer_factor: 1.2       # +20% buffer de segurança
    api_intensive_multiplier: 3.0    # 3x mais tempo para stages API-only
    
  # Configuração de chunks para stages intensivos
  chunk_management:
    adaptive_chunk_size: true
    base_chunk_size: 10
    max_chunk_size: 50
    min_chunk_size: 2
    time_per_chunk_target: 60        # 1 min por chunk ideal
    
    # Configurações específicas por stage
    stage_specific_chunks:
      "05_political_analysis": 5     # Chunks menores para análise política
      "08_sentiment_analysis": 3     # Chunks muito pequenos para sentimentos
      "07_linguistic_processing": 25  # Chunks maiores para spaCy
      "09_topic_modeling": 15        # Chunks médios para topic modeling
      
  # Recovery strategy para timeouts
  recovery:
    max_retries: 3
    retry_with_smaller_chunks: true
    progressive_chunk_reduction: 0.5  # Reduz chunk size pela metade
    fallback_to_sampling: true
    emergency_sample_size: 100       # Amostra de emergência
    escalation_timeouts: [300, 600, 1200, 1800]  # 5, 10, 20, 30 min
    
  # Configurações para diferentes tipos de processamento
  processing_types:
    api_only:
      base_timeout_multiplier: 3.0
      chunk_size_reducer: 0.3        # Chunks 70% menores
      max_concurrent_requests: 3
      
    hybrid_processing:
      base_timeout_multiplier: 2.0
      chunk_size_reducer: 0.5
      max_concurrent_requests: 5
      
    local_processing:
      base_timeout_multiplier: 1.0
      chunk_size_reducer: 1.0        # Chunks normais
      max_concurrent_requests: 8

# Configurações de monitoramento
monitoring:
  track_stage_performance: true
  log_timeout_events: true
  generate_performance_reports: true
  alert_on_repeated_timeouts: true
  performance_metrics_file: "logs/stage_performance.json"
  
# Configurações de emergência
emergency:
  global_timeout_limit: 3600        # 1 hora limite absoluto por stage
  memory_limit_mb: 4096             # 4GB limite de memória
  cpu_usage_threshold: 90           # % CPU máximo
  auto_fallback_enabled: true
  emergency_contact_enabled: false

# Configurações específicas para problemas conhecidos
known_issues:
  sentiment_analysis_intensive: true
  political_analysis_api_heavy: true
  spacy_memory_usage: true
  voyage_api_rate_limits: true
  
  # Soluções automáticas
  auto_solutions:
    reduce_batch_size_on_timeout: true
    increase_timeout_on_large_datasets: true
    use_sampling_on_memory_pressure: true
    parallelize_when_possible: true