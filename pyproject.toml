[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dataanalysis-bolsonarismo"
version = "5.0.0"
description = "Enterprise-Grade Analysis System for Telegram Discourse: Bolsonarismo, Denialism and Digital Authoritarianism - Pipeline Optimization Complete"
authors = ["Pablo Almada <pabloera@gmail.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "src"}]

keywords = ["nlp", "telegram", "political-analysis", "discourse-analysis", "pipeline-optimization", "enterprise-grade", "production-ready"]

[tool.poetry.urls]
homepage = "https://github.com/pabloalmada/dataanalysis-bolsonarismo"
repository = "https://github.com/pabloalmada/dataanalysis-bolsonarismo"
documentation = "https://github.com/pabloalmada/dataanalysis-bolsonarismo/blob/main/pipeline_optimization.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"

# Análise de dados
pandas = ">=2.2.3,<3.0.0"
numpy = ">=1.22.4,<2.3.0"
scipy = ">=1.10.1,<1.14.0"
matplotlib = ">=3.7.0,<4.0.0"
seaborn = ">=0.12.0,<1.0.0"

# NetworkX kept for network analysis (non-visualization)
networkx = ">=3.1,<4.0.0"

# Processamento de linguagem natural
nltk = ">=3.8.1,<4.0.0"
scikit-learn = ">=1.3.0,<2.0.0"

# Embeddings e Similaridade Semântica
voyageai = ">=0.3.2,<1.0.0"
gensim = ">=4.3.2,<5.0.0"
spacy = ">=3.8.7,<4.0.0"
faiss-cpu = ">=1.11.0,<2.0.0"

# Utilitários
chardet = ">=5.2.0,<6.0.0"
ftfy = ">=6.1.1,<7.0.0"
python-dateutil = ">=2.8.2,<3.0.0"
tqdm = ">=4.66.1,<5.0.0"
pyyaml = ">=6.0.1,<7.0.0"
pyarrow = ">=15.0.0,<18.0.0"

# Análise de texto adicional
textblob = ">=0.17.1,<0.18.0"
langdetect = ">=1.0.9,<2.0.0"
emoji = ">=2.8.0,<3.0.0"

# Manipulação de dados
openpyxl = ">=3.1.2,<4.0.0"
xlrd = ">=2.0.1,<3.0.0"

# Detecção de encoding
charset-normalizer = ">=3.3.2,<4.0.0"

# Fuzzy matching
fuzzywuzzy = ">=0.18.0,<0.19.0"

# API Anthropic
anthropic = ">=0.40.0,<0.50.0"
python-dotenv = ">=1.0.0,<2.0.0"

# Dashboard dependencies
dash = ">=2.14.0,<4.0.0"
plotly = ">=5.17.0,<6.0.0"
dash-bootstrap-components = ">=1.5.0,<2.0.0"
dash-core-components = ">=2.0.0,<3.0.0"
dash-html-components = ">=2.0.0,<3.0.0"
dash-table = ">=5.0.0,<6.0.0"
streamlit = ">=1.28.0,<2.0.0"
numexpr = "^2.11.0"
lz4 = "^4.4.4"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.3,<8.0.0"
pytest-cov = ">=4.1.0,<5.0.0"
black = ">=24.3.0,<25.0.0"
isort = ">=5.12.0,<6.0.0"
flake8 = ">=6.0.0,<7.0.0"
mypy = ">=1.3.0,<2.0.0"
vulture = "^2.14"

[tool.poetry.group.jupyter.dependencies]
ipykernel = ">=6.25.2,<7.0.0"
jupyter = ">=1.0.0,<2.0.0"
jupyterlab = ">=4.0.0,<5.0.0"

[tool.poetry.group.optimization]
optional = false

[tool.poetry.group.optimization.dependencies]
# Week 1-5 Optimization Dependencies
asyncio-mqtt = "^0.16.1"  # Async processing
aiofiles = "^24.1.0"  # Async file operations
psutil = ">=5.9.0,<6.0.0"  # System monitoring
memory-profiler = "^0.61.0"  # Memory profiling
py-spy = "^0.3.14"  # Performance profiling
cachetools = "^5.3.0"  # Advanced caching
redis = {version = "^5.0.0", optional = true}  # Distributed caching
prometheus-client = "^0.20.0"  # Metrics collection
uvloop = {version = "^0.19.0", markers = "sys_platform != 'win32'"}  # Event loop optimization

[tool.poetry.group.deep-learning]
optional = true

[tool.poetry.group.deep-learning.dependencies]
tensorflow = ">=2.13.0,<3.0.0"
transformers = ">=4.35.2,<5.0.0"
torch = ">=2.1.0,<3.0.0"

[tool.poetry.scripts]
# Main Pipeline Execution
pipeline = "run_pipeline:main"

# Optimization Testing & Validation
test-optimization = "test_all_weeks_consolidated:main"
test-week1 = "test_week1_emergency:main"
test-week2 = "test_week2_advanced_caching:main" 
test-week5 = "test_week5_production:main"

# Production Deployment
deploy-production = "src.optimized.production_deploy:get_global_deployment_system"
memory-optimizer = "src.optimized.memory_optimizer:get_global_memory_manager"

# Performance Monitoring
monitor-performance = "src.optimized.realtime_monitor:get_global_performance_monitor"
benchmark-pipeline = "src.optimized.pipeline_benchmark:get_global_benchmark"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=src"